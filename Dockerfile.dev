FROM oven/bun:slim as base
WORKDIR /usr/src/app

ARG TARGETPLATFORM

RUN echo "Building for ${TARGETPLATFORM}"

# Install piper and models in a single layer to reduce image size
FROM base AS piper_installer
RUN apt update && apt install -y curl tar && \
    arch="" && \
    case "${TARGETPLATFORM}" in \
    "linux/amd64") arch="linux_x86_64" ;; \
    "linux/arm64") arch="linux_aarch64" ;; \
    "linux/arm/v7") arch="linux_armv7l" ;; \
    *) echo "Unsupported platform: ${TARGETPLATFORM}" && exit 1 ;; \
    esac && \
    curl -L https://github.com/rhasspy/piper/releases/download/2023.11.14-2/piper_${arch}.tar.gz -o piper.tar.gz && \
    tar -xvf piper.tar.gz -C /usr/local/bin && \
    rm piper.tar.gz && \
    mkdir /models && \
    curl -L "https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/ryan/medium/en_US-ryan-medium.onnx?download=true" -o /models/ryan-medium.onnx && \
    curl -L "https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/ryan/medium/en_US-ryan-medium.onnx.json?download=true" -o /models/ryan-medium.onnx.json && \
    curl -L "https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_GB/semaine/medium/en_GB-semaine-medium.onnx?download=true" -o /models/semaine-medium.onnx && \
    curl -L "https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_GB/semaine/medium/en_GB-semaine-medium.onnx.json?download=true" -o /models/semaine-medium.onnx.json && \
    curl -L "https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/hfc_female/medium/en_US-hfc_female-medium.onnx?download=true" -o /models/kim.onnx && \
    curl -L "https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/hfc_female/medium/en_US-hfc_female-medium.onnx.json?download=true" -o /models/kim.onnx.json

# Final image: copy only the necessary files
FROM base AS dev
# Combine apt update and install commands, and clean up in the same layer to reduce size
RUN apt update && apt install -y ffmpeg && apt clean && rm -rf /var/lib/apt/lists/*
COPY package.json bun.lockb ./
RUN bun install --frozen-lockfile
COPY --from=piper_installer /usr/local/bin/* /usr/local/bin/
COPY --from=piper_installer /models /models

USER bun
EXPOSE 3000/tcp
ENV PORT=5
ENV MODEL_PATH=/models
ENTRYPOINT ["bun", "dev"]